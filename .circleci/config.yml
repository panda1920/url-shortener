version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.2.1

executors:
  node_env:
    docker:
      - image: circleci/node

jobs:
  test_frontend:
    executor: node_env
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-url-shortener-{{ checksum "./client/package-lock.json" }}
            - v1-url-shortener-
      - run:
          name: Installing dependencies
          command: |
            cd ./client
            npm install
      - run:
          name: Run test code
          command: |
            cd ./client
            npm run test
      - save_cache:
          paths:
            - ./client/node_modules
          key: v1-url-shortener-{{ checksum "./client/package-lock.json" }}
          when: on_success

  publish_image:
    executor: node_env
    environment:
      IMAGENAME_FRONTEND: panda1920/url-shortener-client:latest
      IMAGENAME_BACKEND: panda1920/url-shortener-worker:latest
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build image
          command: |
            cd ./client
            npm run build:docker
            cd ../worker/worker
            npm run docker:build
      - run:
          name: Publish image to dockerhub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGENAME_FRONTEND
            docker push $IMAGENAME_BACKEND

  deploy:
    executor: aws-cli/default
    environment:
      SERVICE_CLIENT: url-shortener-client
    steps:
      - aws-cli/install
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      - run:
          name: Update ECS services to use the latest docker image
          command: |
            aws ecs update-serice --cluster url-shortener --service $SERVICE_CLIENT --region $AWS_REGION --force-new-deployment


workflows:
  build_and_test:
    jobs:
      # - test_frontend:
      #     filters:
      #       branches:
      #         only: master
      - publish_image
      # - publish_image:
          # requires:
          #   - test_frontend
      - deploy:
          requires:
            - publish_image
          context: AWS
